/* This file is part of www.nand2tetris.org
   and the book "The Elements of Computing Systems"
   by Nisan and Schocken, MIT Press.
   File name: projects/03/a/PC.hdl */

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    Inc16 (in=r, out=rPlus);
    
    /* sel[0] sel[1] sel[2]   out[t+1]
       reset  load   inc
       0      0      0        out[t]   (r)      a
       1<     0      0        0        (false)  b
       0      1<     0        in[t]    (in)     c
       1<     1      0        0        (false)  d
       0      0      1<       out[t]+1 (rPlus)  e
       1<     0      1        0        (false)  f
       0      1<     1        in[t]    (in)     g
       1<     1      1        0        (false)  h
    */

    Mux8Way16 (a=r, b=false, c=in, d=false , e=rPlus, f=false, g=in, h=false,
               sel[0]=reset, sel[1]=load, sel[2]=inc,
               out=m);

    Or (a=load, b=inc, out=w);
    Or (a=w, b=reset, out=update);

    Register (in=m, load=update, out=r);

    /* Since I can't just do out=r */
    Not16 (in=r, out=notr);
    Not16 (in=notr, out=out);
}
